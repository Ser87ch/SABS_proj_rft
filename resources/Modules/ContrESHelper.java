// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Modules;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>ContrES</b><br>
 * Generated     : <b>2013/11/06 13:35:52</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 build 2600 Service Pack 3 <br>
 * 
 * @since  íîÿáğÿ 06, 2013
 * @author admin
 */
public abstract class ContrESHelper extends RationalTestScript
{
	/**
	 * Îòêëş÷èòüÏàíåëü: with default state.
	 *		.text : Îòêëş÷èòü ïàíåëü
	 * 		.class : TdxBarControl
	 * 		.name : Îòêëş÷èòü ïàíåëü
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject ESpanel() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ESpanel"));
	}
	/**
	 * Îòêëş÷èòüÏàíåëü: with specific test context and state.
	 *		.text : Îòêëş÷èòü ïàíåëü
	 * 		.class : TdxBarControl
	 * 		.name : Îòêëş÷èòü ïàíåëü
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject ESpanel(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ESpanel"), anchor, flags);
	}
	
	/**
	 * Îøèáêà: with default state.
	 *		.text : Îøèáêà
	 * 		.class : #32770
	 * 		.processName : purs_loader.exe
	 * 		.name : Îøèáêà
	 */
	protected TopLevelSubitemTestObject Errorwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("Errorwindow"));
	}
	/**
	 * Îøèáêà: with specific test context and state.
	 *		.text : Îøèáêà
	 * 		.class : #32770
	 * 		.processName : purs_loader.exe
	 * 		.name : Îøèáêà
	 */
	protected TopLevelSubitemTestObject Errorwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("Errorwindow"), anchor, flags);
	}
	
	/**
	 * Outline: with default state.
	 *		.class : .Outline
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject Menutree() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("Menutree"));
	}
	/**
	 * Outline: with specific test context and state.
	 *		.class : .Outline
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject Menutree(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("Menutree"), anchor, flags);
	}
	
	/**
	 * Äà: with default state.
	 *		.text : Äà
	 * 		.class : .Pushbutton
	 * 		.name : Äà
	 * 		.classIndex : 0
	 */
	protected GuiTestObject OKGUbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("OKGUbutton"));
	}
	/**
	 * Äà: with specific test context and state.
	 *		.text : Äà
	 * 		.class : .Pushbutton
	 * 		.name : Äà
	 * 		.classIndex : 0
	 */
	protected GuiTestObject OKGUbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("OKGUbutton"), anchor, flags);
	}
	
	/**
	 * ÎÊ: with default state.
	 *		.text : ÎÊ
	 * 		.class : .Pushbutton
	 * 		.name : ÎÊ
	 * 		.classIndex : 0
	 */
	protected GuiTestObject OKerrorbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("OKerrorbutton"));
	}
	/**
	 * ÎÊ: with specific test context and state.
	 *		.text : ÎÊ
	 * 		.class : .Pushbutton
	 * 		.name : ÎÊ
	 * 		.classIndex : 0
	 */
	protected GuiTestObject OKerrorbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("OKerrorbutton"), anchor, flags);
	}
	
	/**
	 * _044582002ÏÓÁÀÍÊÀĞÎÑÑÈÈÇÀÏÀÄÍÎÅ: with default state.
	 *		.text : 044582002 ÏÓ ÁÀÍÊÀ ĞÎÑÑÈÈ ÇÀÏÀÄÍÎÅ
	 * 		.class : TpursMainForm
	 * 		.processName : purs_loader.exe
	 * 		.name : 044582002 ÏÓ ÁÀÍÊÀ ĞÎÑÑÈÈ ÇÀÏÀÄÍÎÅ
	 */
	protected TopLevelSubitemTestObject SABSwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("SABSwindow"));
	}
	/**
	 * _044582002ÏÓÁÀÍÊÀĞÎÑÑÈÈÇÀÏÀÄÍÎÅ: with specific test context and state.
	 *		.text : 044582002 ÏÓ ÁÀÍÊÀ ĞÎÑÑÈÈ ÇÀÏÀÄÍÎÅ
	 * 		.class : TpursMainForm
	 * 		.processName : purs_loader.exe
	 * 		.name : 044582002 ÏÓ ÁÀÍÊÀ ĞÎÑÑÈÈ ÇÀÏÀÄÍÎÅ
	 */
	protected TopLevelSubitemTestObject SABSwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("SABSwindow"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject profilecomboBox() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("profilecomboBox"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject profilecomboBox(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("profilecomboBox"), anchor, flags);
	}
	
	

	protected ContrESHelper()
	{
		setScriptName("Modules.ContrES");
	}
	
}

